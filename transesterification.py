# -*- coding: utf-8 -*-
"""Transesterification

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BVLOqoC4btDRdlyUwKg8BrvtLkdjShd0
"""

import math
from math import exp
import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt


#current_state = np.asarray([0.347, 0, 0, 0, 2.082, 0, 338, 300])
def get_state(action,tf,x0): # action = [21, 34, ....]
    F = action
#     t_model = np.round_(np.linspace(0, tf,15), decimals = 8)
    def model(y,t):

#         F = 0.0058                               #kg/sec
        k1=(3.92E7/60*exp(-6614.83/y[6]))
        k2=(5.77E5/60*exp(-(4997.98)/y[6]))
        k3=(5.88E12/60*exp(-(9993.96)/y[6]))
        k4=(0.98E10/60*exp(-7366.64/y[6]))
        k5=(5.35E3/60*exp(-(3231.18)/y[6]))
        k6=(2.15E4/60*exp(-4824.87/y[6]))

        V = 1             #m^3
        rho = 860         #kg/m^3
        Mr = 391.4        #Kg/Kmol
        Cm = 1277         #kJ/(kmol K)
        Delta_H = -18500  #kj/kmol
        AU = 7.5          #kj/(sec K) = 450 kj/(min K)
        mj= 99.69         #kg
        Cw = 4.2          #kj/(kg K)
        Tc = 293.15       #K


        y1 = y[0]
        y2 = y[1]
        y3 = y[2]
        y4 = y[3]
        y5 = y[4]
        y6 = y[5]
        y7 = y[6]
        y8 = y[7]


        dy1dt = -k1*y1*y5+k2*y2*y4                                                    # TG
        dy2dt = k1*y1*y5-k2*y2*y4-k3*y2*y5+k4*y3*y4                                   # DG
        dy3dt = -k5*y3*y5+k3*y2*y5+k6*y6*y4-k4*y3*y4                                  #MG
        dy4dt = k1*y1*y5-k2*y2*y4+k3*y2*y5-k4*y3*y4+k5*y3*y5-k6*y6*y4                 #ME
        dy5dt = -dy4dt                                                                #A
        dy6dt = k5*y3*y5-k6*y6*y4                                                     #Gl
        dy7dt = (Mr/(V*rho*Cm))*((-dy4dt*V*Delta_H)+(AU*(y8-y7)))                     #Tr                                                               #Tr
        dy8dt =  ((F*(Tc-y8))-((AU/Cw)*(y8-y7)))/mj                                   #Tj
        dy8dt = np.float64(dy8dt)

        state = np.asarray([dy1dt, dy2dt, dy3dt, dy4dt, dy5dt, dy6dt, dy7dt, dy8dt],dtype=np.float64)

        return state

    t = np.linspace(0, tf,10)
    y = odeint(model, x0,t)
    All=y

    return All[All.shape[0]-1]

    #return All

#x0=[0.347, 0, 0, 0, 2.082, 0, 338, 300]
#state = get_state(0.0058,current_state)
#print(state)

#import matplotlib.pyplot as plt
#plt.figure()
#plt.plot([l for i,j,k,l,m,n,o,p in state])
#plt.title("FAME")

